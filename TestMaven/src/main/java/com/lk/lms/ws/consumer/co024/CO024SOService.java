package com.lk.lms.ws.consumer.co024;


import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.2.5
 * 2018-10-11T10:40:35.051+09:00
 * Generated source version: 3.2.5
 *
 */
@WebServiceClient(name = "CO024_SOService",
                  wsdlLocation = "classpath:wsdl/CO024_SOService.wsdl",
                  targetNamespace = "http://skgas.co.kr/CO024")
public class CO024SOService extends Service {
	
	public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://skgas.co.kr/CO024", "CO024_SOService");
    public final static QName HTTPSPort = new QName("http://skgas.co.kr/CO024", "HTTPS_Port");
    public final static QName HTTPPort = new QName("http://skgas.co.kr/CO024", "HTTP_Port");
    static {
        URL url = CO024SOService.class.getClassLoader().getResource("wsdl/CO024_SOService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(CO024SOService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/CO024_SOService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CO024SOService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CO024SOService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CO024SOService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CO024SOService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CO024SOService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CO024SOService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CO024SO
     */
    @WebEndpoint(name = "HTTPS_Port")
    public CO024SO getHTTPSPort() {
        return super.getPort(HTTPSPort, CO024SO.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CO024SO
     */
    @WebEndpoint(name = "HTTPS_Port")
    public CO024SO getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, CO024SO.class, features);
    }


    /**
     *
     * @return
     *     returns CO024SO
     */
    @WebEndpoint(name = "HTTP_Port")
    public CO024SO getHTTPPort() {
        return super.getPort(HTTPPort, CO024SO.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CO024SO
     */
    @WebEndpoint(name = "HTTP_Port")
    public CO024SO getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, CO024SO.class, features);
    }

}
