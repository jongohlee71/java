<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Security FILE -->
    <import resource="classpath:/META-INF/spring/core/security/sprout-security-core.xml"/>
    <import resource="classpath:/META-INF/spring/core/security/sprout-security-mix.xml"/>

    <!-- CXF Webservice Endpoint -->
    <import resource="classpath:/META-INF/spring/cxf-beans.xml"/>

    <!-- [START] Spring Session 설정 -->
    <!--<context:annotation-config />-->
    <!--<bean class="org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration" />-->
    <!-- [ END ] Spring Session 설정 -->

    <bean id="guidGenerator" class="nexcore.sprout.foundry.commons.impl.DefaultGuidGenerator"/>
    
    <!-- TODO 인사정보 확장 해야함 -->
    <bean id="userIdFinder" class="nexcore.sprout.foundry.commons.impl.DefaultUserIdFinder"/>

    <!-- Spring MVC Filter  -->
    <bean id="compositeFilter" class="org.springframework.web.filter.CompositeFilter">
        <property name="filters">
            <list>
                <bean id="characterEncodingFilter" class="org.springframework.web.filter.CharacterEncodingFilter">
                    <property name="encoding" value="UTF-8"/>
                </bean>
                <bean id="guidGenerateServletFilter" class="nexcore.sprout.foundry.webmvc.filter.GuidGenerateServletFilter"/>
                <bean id="mDCInsertingServletFilter" class="nexcore.sprout.foundry.webmvc.filter.MDCInsertingServletFilter"/>

                <!-- [START] Spring Session 설정 -->
                <!--<bean id="springSessionRepositoryFilter" class="org.springframework.session.web.http.SessionRepositoryFilter">-->
                    <!--<constructor-arg index="0" ref="sessionRepository" />-->
                <!--</bean>-->
                <!-- [ END ] Spring Session 설정 -->
            </list>
        </property>
    </bean>        
    <!-- Spring MVC Filter  -->    
    
    <!-- ========================= DBMS DEFINITIONS ======================== -->
    <bean id="transactionManagerForSprout" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceForSprout" />
    </bean>
    
    <!-- ========================= Tiles DEFINITIONS ======================== -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>classpath*:/META-INF/tiles/*.xml</value>
            </list>
        </property>
        <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
    </bean>
    
    <!-- ========================= MessageSource DEFINITIONS ======================== -->
    <bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">
        <constructor-arg ref="messageSource"/>
    </bean>                           
    
    <bean id="messageSource" class="nexcore.sprout.foundry.resourcebundle.message.ReloadableResourceBundleMessageSource">
        <property name="parentMessageSource" ref="messageSourceForDb"/>
        <property name="basenames">
            <list>
                <value>org/springframework/security/messages</value>
                <value>META-INF/messages/message/msg</value>
                <value>META-INF/messages/label/label</value>
                <value>META-INF/messages/error/error</value>
                <value>META-INF/sprout/messages/error/foundry_error</value>
            </list>
        </property>
    </bean>
    
    <bean id="messageSourceForDb" class="nexcore.sprout.foundry.resourcebundle.message.DBReloadableResourceBundleMessageSource">
            <property name="dataSource" ref="dataSourceForSprout"/>
            <property name="queryCode" value="${${dbms.kind}.message.select-query}" />
     </bean>
    
    <!-- ========================= CodeSource DEFINITIONS ======================== -->
    <bean id="codeSourceAccessor"
        class="nexcore.sprout.foundry.resourcebundle.code.CodeSourceAccessor">
        <constructor-arg ref="codeSource" />
    </bean>

    <bean id="codeSource"
        class="nexcore.sprout.foundry.resourcebundle.code.DBReloadableResourceBundleCodeSource">
        <property name="dataSource" ref="dataSourceForSprout"/>
        <property name="order" value="90" />
        <property name="cacheSeconds" value="0" />
    </bean>
    
    <!-- ========================= [START] Properties DEFINITIONS ======================== -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreUnresolvablePlaceholders" value="false" />
        <property name="properties" ref="configurationProperties"/>
    </bean>
    
    <bean id="configurationProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="ignoreResourceNotFound" value="false"/>
        <property name="localOverride" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:META-INF/properties/configuration.properties</value>
                <value>classpath:META-INF/properties/security.properties</value>
                <value>classpath:META-INF/properties/dbms.properties</value>
                <value>classpath:META-INF/properties/query.properties</value>
            </list>            
        </property>
        <!--Optional Settings -->
        <property name="propertiesArray">
            <list>
                <!-- 서버 환경(로컬,개발,운영) 별 설정 파일  -->
                <ref bean="mode_properties"/>
                <!-- Instance 별(개별 JVM용) 설정 파일  -->
                <ref bean="instance_properties"/>
            </list>    
        </property>
    </bean>
    
    <!-- Instance 별 설정 , JVM -D option 이용  -->
    <util:properties id="instance_properties" location="classpath:META-INF/properties/instance/instance_${instanceId:localhost}.properties"/>
    <!-- 
        * spring profile을 이용하여  서버 유형별 또는 환경별 Bean 설정을 처리함 
            파일 선택(local,dev,production)을 하거나 환경에 맞는 설정을 세팅함 
        * spring profile 지정 방법 
             1. jvm arg 이용 
                  -Dspring.profiles.active=dev,abc
             2. web.xml  이용 
                <context-param>
                  <param-name>spring.profiles.active</param-name>
                  <param-value>dev</param-value>
                </context-param>
             3. System Property:
                export spring.profiles.active=production
    -->
    <bean id="propertySet" class="lk.app.common.util.CommonPropertyBean">
        <property name="RUNTIME_MODE" value="${runtime.mode}"/>
        <property name="BO_SERVER_URL_REAL" value="${bo.server.url.real}"/>
        <property name="BO_SERVER_URL" value="${bo.server.url}"/>
        <property name="FO_SERVER_URL" value="${fo.server.url}"/>

        <property name="ERP_WS_URL" value="${erp.ws.url}"/>
        <property name="ERP_WS_SENDER_SERVICE" value="${erp.ws.sender.service}"/>
        <property name="ERP_WS_USERNAME" value="${erp.ws.username}"/>
        <property name="ERP_WS_PASSWORD" value="${erp.ws.password}"/>
        
        <property name="ECARD_WS_URL" value="${ecard.ws.url}"/>

    </bean>    

    <util:properties id="mode_properties" location="classpath:META-INF/properties/mode/mode_local.properties"/>

    <!-- VDI  -->
    <beans profile="local">
        <util:properties id="mode_properties" location="classpath:META-INF/properties/mode/mode_local.properties"/>
    </beans>
    <!-- 개발기  -->
    <beans profile="dev">
        <util:properties id="mode_properties" location="classpath:META-INF/properties/mode/mode_dev.properties"/>
    </beans>
    <!-- 운영기  -->
    <beans profile="prod">
        <util:properties id="mode_properties" location="classpath:META-INF/properties/mode/mode_prod.properties"/>
    </beans>
    <!-- ========================= [END] Properties DEFINITIONS ======================== -->
    
</beans>